// <auto-generated />
using System;
using FlowerChainAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlowerChainAPI.Migrations
{
    [DbContext(typeof(FlowerChainContext))]
    [Migration("20201110132735_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FlowerChainAPI.Models.Domain.Flower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("flowerType")
                        .HasColumnType("longtext");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Flower");
                });

            modelBuilder.Entity("FlowerChainAPI.Models.Domain.FlowerBouquet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("amountSold")
                        .HasColumnType("int");

                    b.Property<string>("bouquetName")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("FlowerBouquet");
                });

            modelBuilder.Entity("FlowerChainAPI.Models.Domain.FlowerShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("houseNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("postalCode")
                        .HasColumnType("longtext");

                    b.Property<string>("shopName")
                        .HasColumnType("longtext");

                    b.Property<string>("streetName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("FlowerShop");
                });

            modelBuilder.Entity("FlowerChainAPI.Models.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("datTimeOrder")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("personId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FlowerChainAPI.Models.Domain.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("firstName")
                        .HasColumnType("longtext");

                    b.Property<int>("flowerShopId")
                        .HasColumnType("int");

                    b.Property<string>("houseNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("isEmployee")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("lastName")
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("postalCode")
                        .HasColumnType("longtext");

                    b.Property<string>("streetName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("FlowerChainAPI.Models.Domain.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("houseNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("postalCode")
                        .HasColumnType("longtext");

                    b.Property<string>("shopName")
                        .HasColumnType("longtext");

                    b.Property<string>("streetName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("FlowerChainAPI.Models.Domain.Customer", b =>
                {
                    b.HasBaseType("FlowerChainAPI.Models.Domain.Person");

                    b.Property<bool>("newsLetter")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("personId")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("FlowerChainAPI.Models.Domain.Employee", b =>
                {
                    b.HasBaseType("FlowerChainAPI.Models.Domain.Person");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("personId")
                        .HasColumnName("Employee_personId")
                        .HasColumnType("int");

                    b.Property<DateTime>("workStartDate")
                        .HasColumnType("datetime(6)");

                    b.HasDiscriminator().HasValue("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
